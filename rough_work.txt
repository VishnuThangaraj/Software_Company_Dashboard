<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Modern Monthly Calendar</title>
    <style>
      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
        background-color: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        padding: 20px;
      }

      .calendar {
        width: 800px; /* Adjust the width as needed */
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
      }

      .calendar-header {
        background-color: #4caf50;
        color: #fff;
        text-align: center;
        padding: 15px 0;
        font-size: 1.5rem;
        border-bottom: 2px solid #388e3c;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .calendar-header button {
        background-color: #4caf50;
        color: #fff;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        font-size: 1rem;
        border-radius: 4px;
        transition: background-color 0.3s ease;
      }

      .calendar-header button:hover {
        background-color: #388e3c;
      }

      .calendar-table {
        width: 100%;
        border-collapse: collapse;
      }

      .calendar-table th,
      .calendar-table td {
        padding: 15px; /* Adjust the padding for larger cells */
        text-align: center;
        border: 1px solid #ddd;
      }

      .calendar-table th {
        background-color: #4caf50;
        color: #fff;
        font-weight: normal;
      }

      .calendar-table td {
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .calendar-table td:hover {
        background-color: #f0f0f0;
      }

      .form-container {
        margin-top: 20px;
        text-align: center;
      }

      .form-container input[type="number"],
      .form-container button {
        padding: 10px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        margin: 0 5px;
      }

      .form-container button {
        background-color: #4caf50;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .form-container button:hover {
        background-color: #388e3c;
      }
    </style>
  </head>
  <body>
    <div class="form-container">
      <input
        type="number"
        id="inputMonth"
        min="1"
        max="12"
        placeholder="Month (1-12)"
      />
      <input
        type="number"
        id="inputYear"
        min="1900"
        max="2100"
        placeholder="Year"
      />
      <button onclick="showCustomMonth()">Show Month</button>
    </div>

    <div class="calendar" id="calendar">
      <div class="calendar-header" id="calendar-header">
        <button id="prevMonthBtn">&lt;</button>
        <div id="calendar-title"></div>
        <button id="nextMonthBtn">&gt;</button>
      </div>
      <table class="calendar-table" id="calendar-body"></table>
    </div>

    <script>
      let currentYear = new Date().getFullYear();
      let currentMonth = new Date().getMonth() + 1; // Current month (1-12)

      // Function to generate calendar
      function generateCalendar(year, month) {
        const daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        const container = document.getElementById("calendar-body");
        const title = document.getElementById("calendar-title");
        const currentDate = new Date(year, month - 1); // month is 0-indexed

        // Clear previous calendar if exists
        container.innerHTML = "";
        title.textContent = `${currentDate.toLocaleString("default", {
          month: "long",
        })} ${year}`;

        // Create table element
        const table = document.createElement("table");

        // Create table header row with day names
        const headerRow = document.createElement("tr");
        daysOfWeek.forEach((day) => {
          const th = document.createElement("th");
          th.textContent = day;
          headerRow.appendChild(th);
        });
        table.appendChild(headerRow);

        // Calculate number of days in the month and the starting day
        const daysInMonth = new Date(year, month, 0).getDate();
        const startDay = new Date(year, month - 1, 1).getDay(); // day of the week (0 - 6)

        // Create rows for the calendar dates
        let date = 1;
        for (let i = 0; i < 6; i++) {
          // at most 6 rows
          const row = document.createElement("tr");
          for (let j = 0; j < 7; j++) {
            // 7 columns for days of the week
            const cell = document.createElement("td");
            if (i === 0 && j < startDay) {
              // empty cells before the start day
              cell.textContent = "";
            } else if (date > daysInMonth) {
              // stop creating cells if all days are filled
              break;
            } else {
              // create a cell with the date
              cell.textContent = date;
              cell.addEventListener("click", () => {
                const selectedDate = new Date(year, month - 1, date);
                console.log(
                  `Clicked date: ${selectedDate.toDateString()}, Day: ${
                    daysOfWeek[selectedDate.getDay()]
                  }`
                );
              });
              date++;
            }
            row.appendChild(cell);
          }
          table.appendChild(row);
          if (date > daysInMonth) {
            break;
          }
        }

        // Append the table to the container
        container.appendChild(table);
      }

      // Initialize calendar for current year and month
      generateCalendar(currentYear, currentMonth);

      // Button event listeners for next and previous month
      document.getElementById("prevMonthBtn").addEventListener("click", () => {
        currentMonth--;
        if (currentMonth < 1) {
          currentMonth = 12;
          currentYear--;
        }
        generateCalendar(currentYear, currentMonth);
      });

      document.getElementById("nextMonthBtn").addEventListener("click", () => {
        currentMonth++;
        if (currentMonth > 12) {
          currentMonth = 1;
          currentYear++;
        }
        generateCalendar(currentYear, currentMonth);
      });

      // Function to show calendar for custom month and year
      function showCustomMonth() {
        const inputMonth = parseInt(
          document.getElementById("inputMonth").value
        );
        const inputYear = parseInt(document.getElementById("inputYear").value);

        if (
          isNaN(inputMonth) ||
          isNaN(inputYear) ||
          inputMonth < 1 ||
          inputMonth > 12
        ) {
          alert("Please enter a valid month (1-12) and year.");
          return;
        }

        currentMonth = inputMonth;
        currentYear = inputYear;
        generateCalendar(currentYear, currentMonth);
      }
    </script>
  </body>
</html>
